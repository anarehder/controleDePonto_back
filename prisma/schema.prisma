// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  username         String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Session          Session[]
  HourControl      HourControl[]
  BankHours        BankHours[]
  DataControl      DataControl[]
}

model Session {
  id            Int      @id @default(autoincrement())
  employeeId    Int
  User          User     @relation(fields: [employeeId], references: [id])
  token         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model HourControl {
  id               Int         @id @default(autoincrement())
  employeeId       Int
  User      User     @relation(fields: [employeeId], references: [id])
  day              DateTime
  entry_time       TIME?
  pause_time       TIME?
  return_time      TIME?
  exit_time        TIME?
  totalWorkedByDay TIME   
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model BankHours {
  id                  Int      @id @default(autoincrement())
  employeeId          Int
  User                User     @relation(fields: [employeeId], references: [id])
  month               String
  workedHoursByMonth  DateTime
  totalHoursByMonth   DateTime 
  hoursBankBalance    DateTime 
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model DataControl {
  id               Int        @id @default(autoincrement())
  employeeId       Int
  User             User       @relation(fields: [employeeId], references: [id])
  tableChanged     String
  typeOfChange     String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}