// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                @id @default(autoincrement())
  name                String             @db.VarChar(255)
  username            String             @unique @db.VarChar(255)
  password            String             @db.VarChar(255)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt @default(now())
  Session             Session[]
  HourControl         HourControl[]
  BankHours           BankHours[]
  DataControl         LogOperation[]
}

model Session {
  id                  Int                @id @default(autoincrement())
  employeeId          Int
  User                User               @relation(fields: [employeeId], references: [id])
  token               String             @unique
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt @default(now())
}

model HourControl {
  id                  Int                @id @default(autoincrement())
  employeeId          Int
  User                User               @relation(fields: [employeeId], references: [id])
  day                 DateTime
  entry_time          DateTime
  exit_time           DateTime?
  totalWorkedByDay    DateTime   
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt @default(now())
}

model BankHours {
  id                  Int                @id @default(autoincrement())
  employeeId          Int
  User                User               @relation(fields: [employeeId], references: [id])
  month               String
  workedHoursByMonth  String
  totalHoursByMonth   String 
  hoursBankBalance    String 
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt @default(now())
}

model LogOperation {
  id                  Int                @id @default(autoincrement())
  employeeId          Int
  User                User               @relation(fields: [employeeId], references: [id])
  tableChanged        String 
  operation           String
  lastValue           String?            @db.VarChar(1000)          
  newValue            String?             @db.VarChar(1000)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt @default(now())
}